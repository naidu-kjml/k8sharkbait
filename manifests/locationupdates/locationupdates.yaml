# This configures a deployment of a docker image built from 
# https://github.com/vigevenoj/owntracks-to-db/tree/master/python
# where the image has been pre-pushed to the cluster nodes
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: owntracks2db
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: owntracks2db
    spec:
      containers:
      - name: owntracks2db
        # This image was previously private but is available publicly now
        image: vigevenoj/owntracks2db
        imagePullPolicy: IfNotPresent
        ports:
          - name: monitoring
            containerPort: 8000
        volumeMounts:
          - name: ca-certificate
            mountPath: /owntracks2db/certificates
            readOnly: true
          # Mount a ConfigMap as a configuration file 
          - name: owntracks2db-config
            mountPath: /owntracks2db/config
        # Use secret contents as environment variables
        env: 
          - name: OWNTRACKS2DB_MQTT_HOST
            valueFrom:
              secretKeyRef:
                name: locationupdates-configuration
                key: owntracks2db-mqtt-host 
          - name: OWNTRACKS2DB_MQTT_PORT
            valueFrom:
              secretKeyRef:
                name: locationupdates-configuration
                key: owntracks2db-mqtt-port
          - name: OWNTRACKS2DB_MQTT_SSL
            valueFrom:
              secretKeyRef:
                name: locationupdates-configuration
                key: owntracks2db-mqtt-ssl
          - name: OWNTRACKS2DB_MQTT_CA
            valueFrom:
              secretKeyRef:
                name: locationupdates-configuration
                key: owntracks2db-mqtt-ca
          - name: OWNTRACKS2DB_MQTT_USERNAME
            valueFrom:
              secretKeyRef:
                name: locationupdates-configuration
                key: owntracks2db-mqtt-username
          - name: OWNTRACKS2DB_MQTT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: locationupdates-configuration
                key: owntracks2db-mqtt-password
          - name: OWNTRACKS2DB_DB_HOST
            valueFrom:
              secretKeyRef:
                name: locationupdates-configuration
                key: owntracks2db-db-host
          - name: OWNTRACKS2DB_DB_PORT
            valueFrom:
              secretKeyRef:
                name: locationupdates-configuration
                key: owntracks2db-db-port
          - name: OWNTRACKS2DB_DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: locationupdates-configuration
                key: owntracks2db-db-username
          - name: OWNTRACKS2DB_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: locationupdates-configuration
                key: owntracks2db-db-password
          - name: OWNTRACKS2DB_DB_NAME
            valueFrom:
              secretKeyRef:
                name: locationupdates-configuration
                key: owntracks2db-db-name
      volumes:
        # Mount certificate from secret
        - name: ca-certificate
          secret:
            secretName: locationupdates-ca-certificate
            items:
              - key: mqtt_ca.crt
                path: ca.crt
        # Mount a configuration file from a ConfigMap
        - name: owntracks2db-config
          configMap:
            name: owntracks2db-blank-config

---
apiVersion: v1
kind: Service
metadata:
  name: owntracks2db
spec:
  ports:
  - name: monitoring
    port: 8000
  selector:
    app: owntracks2db

# This is an example of the secret required for this deployment:
#---
#kind: Secret
#apiVersion: v1
#metadata:
#  name: owntracks2db-configuration
#  namespace: default
#type: Opaque
#data:
#  owntracks2db-mqtt-host: 
#  owntracks2db-mqtt-port:
#  owntracks2db-mqtt-ssl:
#  # owntracks2db-mqtt-ca is a path; use another secret to be mounted at /owntracks2db/certificates/ca.crt
#  owntracks2db-mqtt-ca:
#  owntracks2db-mqtt-username:
#  owntracks2db-mqtt-password:
#  owntracks2db-db-host:
#  owntracks2db-db-port:
#  owntracks2db-db-username:
#  owntracks2db-db-password:
#  owntracks2db-db-name:

